;0
(deffunction isValidNumber(?a)
    (or (integerp ?a) (floatp ?a))
)

(deffunction isNaturalNumber(?a)
    (and (integerp ?a) (>= ?a 0))
)

(deffunction append(?a $?vector)
    (return (insert$ ?vector (+ 1 (length $?vector)) ?a))
)

(deffunction digits(?num)
    (bind ?i 1)
    (while (not (= 0 (div ?num (** 10 ?i))))
        (bind ?i (+ ?i 1))
    )
    (return ?i)
)

;9
(deffunction cartesiano(?a ?b)
    (if (or (not(multifieldp ?a)) (not(multifieldp ?b)))
    then (printout t "Introduce 2 variables multicampo." crlf)
       (return)
    )
    (bind ?res (create$))
    (foreach ?item_a ?a
        (foreach ?item_b ?b
            (bind $?res (append ?item_a $?res))
            (bind $?res (append ?item_b $?res))
        )
    )
    (return ?res)
)

;10
(deffunction escalar(?a ?b)
    (if (or (not(multifieldp ?a)) (not(multifieldp ?b)))
    then (printout t "Introduce 2 variables multicampo." crlf)
       (return)
    )
    (if (not (= (length$ ?a) (length ?b)))
    then (printout t "Los multicampos deben ser del mismo tamaño." crlf)
       (return)
    )
    (bind ?res 0)
    (loop-for-count (?i 1 (length$ ?a))
        (bind ?tmp_a (nth$ ?i ?a))
        (bind ?tmp_b (nth$ ?i ?b))
        (if (not (and (isValidNumber ?tmp_a) (isValidNumber ?tmp_b)))
        then (printout t "Todos los valores deben ser números." crlf)
             (return)
        )
        (bind ?res (+ ?res (* ?tmp_a ?tmp_b)))
    )
    (return ?res)
)

;11
; lo dejo sin hacer de momento, que no estoy totalmente seguro de como funciona
; le pregunto a Ekaitz

;12
(deffunction isPrime(?num)
    (bind ?root (integer (sqrt ?num)))
    (bind ?prime TRUE)
    (if (or (= ?num 0) (= ?num 1)) then
        (return FALSE)
    )
    (loop-for-count (?i 2 ?root)
        (if (= 0 (mod ?num ?i)) then
            (bind ?prime FALSE)
            (break)
        )
    )
    (return ?prime)
)

(deffunction isCapi(?num)
    (bind ?digits (digits ?num))
    (bind ?string (str-cat ?num))
    (bind ?top (sub-string 1 (div ?digits 2) ?string))
    (bind ?bottom (sub-string (- (+ ?digits 1) (div ?digits 2)) ?digits ?string))
    (bind ?capi TRUE)
    (loop-for-count (?i 1 (div ?digits 2))
        (bind ?j (- (+ (div ?digits 2) 1) ?i))
        (bind ?d1 (sub-string ?i ?i ?top))
        (bind ?d2 (sub-string ?j ?j ?bottom))
        (if (not (= 0 (str-compare ?d1 ?d2))) then
            (bind ?capi FALSE)
            (break)
        )
    )
    (return ?capi)
)

(deffunction num_primos_y_capicua()
    (printout t "¿Cuántos números quieres comprobar?" crlf)
    (bind ?num (read))
    (if (not (isNaturalNumber ?num)) then
        (printout t "Input no válido." crlf)
        (return)
    )
    (loop-for-count (?i 0 ?num)
        (if (and (isPrime ?i) (isCapi ?i)) then
            (printout t ?i " ")
        )
    )
    (printout t "" crlf)
    (return)
)

;13
(deffunction num_magico(?num)
    (if (not (isNaturalNumber ?num)) then
        (printout t "Input no válido." crlf)
        (return)
    )
    (bind ?res ?num)
    (while (not (and (not (= 0 ?res)) (= 0(div ?res 10))))
    ; salir cuando res!=0 y res sea de un dígito (res / 10 = 0)
        (bind ?tmp 0)
        (bind ?d 1)
        (bind ?max_pow (digits ?res))
        (loop-for-count (?pow 0 ?max_pow)
            (bind ?d (mod (div ?res (** 10 ?pow)) 10))
            (bind ?tmp (+ ?tmp ?d))
        )
        (bind ?res ?tmp)
    )
    (return ?res)
)

; 14
(deffunction esMedio(?num)
    (if (not (isNaturalNumber ?num)) then
        (printout f "Input no válido." crlf)
        (return)
    )
    (bind ?below 0)
    (bind ?above 0)
    (loop-for-count (?i 1 (- ?num 1))
        (bind ?below (+ ?below ?i))
    )
    (bind ?j (+ ?num 1))
    (while (< ?above ?below)
        (bind ?above (+ ?above ?j))
        (bind ?j (+ ?j 1))
    )
    (printout t "below: " ?below crlf)
    (printout t "above: " ?above crlf)
    (return (= ?above ?below))
)
